SIGNAL(3P)                                       POSIX Programmer's Manual                                      SIGNAL(3P)

[1mPROLOG[0m
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ
       (consult the corresponding Linux manual page for details of Linux behavior), or the interface  may  not  be  imple‚Äê
       mented on Linux.

[1mNAME[0m
       signal ‚Äî signal management

[1mSYNOPSIS[0m
       #include <signal.h>

       void (*signal(int [4msig[24m, void (*[4mfunc[24m)(int)))(int);

[1mDESCRIPTION[0m
       The  functionality  described  on  this reference page is aligned with the ISO C standard. Any conflict between the
       requirements described here and the ISO C standard is unintentional. This volume  of  POSIX.1‚Äê2008  defers  to  the
       ISO C standard.

       Use of this function is unspecified in a multi-threaded process.

       The  [4msignal[24m()  function  chooses  one of three ways in which receipt of the signal number [4msig[24m is to be subsequently
       handled. If the value of [4mfunc[24m is SIG_DFL, default handling for that signal shall occur.  If the value  of  [4mfunc[24m  is
       SIG_IGN, the signal shall be ignored.  Otherwise, the application shall ensure that [4mfunc[24m points to a function to be
       called when that signal occurs. An invocation of such a function because of a signal, or (recursively) of any  fur‚Äê
       ther  functions called by that invocation (other than functions in the standard library), is called a ``signal han‚Äê
       dler''.

       When a signal occurs, and [4mfunc[24m points to a function, it is implementation-defined whether the equivalent of a:

           [1msignal([4m[22msig[24m[1m, SIG_DFL);[0m

       is executed or the implementation prevents some implementation-defined set of signals (at least including [4msig[24m) from
       occurring  until  the current signal handling has completed. (If the value of [4msig[24m is SIGILL, the implementation may
       alternatively define that no action is taken.) Next the equivalent of:

           [1m(*func)(sig);[0m

       is executed. If and when the function returns, if the value of [4msig[24m was SIGFPE, SIGILL,  or  SIGSEGV  or  any  other
       implementation-defined  value corresponding to a computational exception, the behavior is undefined. Otherwise, the
       program shall resume execution at the point it was interrupted. The ISO C standard places a restriction on applica‚Äê
       tions  relating to the use of [4mraise[24m() from signal handlers.  This restriction does not apply to POSIX applications,
       as POSIX.1‚Äê2008 requires [4mraise[24m() to be async-signal-safe (see [4mSection[24m [4m2.4.3[24m, [4mSignal[24m [4mActions[24m).

       If the process is multi-threaded, or if the process is single-threaded and a signal handler is executed other  than
       as the result of:

        *  The  process  calling  [4mabort[24m(), [4mraise[24m(), [4mkill[24m(), [4mpthread_kill[24m(), or [4msigqueue[24m() to generate a signal that is not
           blocked

        *  A pending signal being unblocked and being delivered before the call that unblocked it returns

       the behavior is undefined if the signal handler refers to any object other than [4merrno[24m with static storage  duration
       other  than by assigning a value to an object declared as [1mvolatile sig_atomic_t[22m, or if the signal handler calls any
       function defined in this standard other than one of the functions listed in [4mSection[24m [4m2.4[24m, [4mSignal[24m [4mConcepts[24m.

       At program start-up, the equivalent of:

           [1msignal([4m[22msig[24m[1m, SIG_IGN);[0m

       is executed for some signals, and the equivalent of:

           [1msignal([4m[22msig[24m[1m, SIG_DFL);[0m

       is executed for all other signals (see [4mexec[24m).

       The [4msignal[24m() function shall not change the setting of [4merrno[24m if successful.

[1mRETURN VALUE[0m
       If the request can be honored, [4msignal[24m() shall return the value of [4mfunc[24m for the most recent call to [4msignal[24m() for the
       specified signal [4msig[24m.  Otherwise, SIG_ERR shall be returned and a positive value shall be stored in [4merrno[24m.

[1mERRORS[0m
       The [4msignal[24m() function shall fail if:

       [1mEINVAL [22mThe  [4msig[24m argument is not a valid signal number or an attempt is made to catch a signal that cannot be caught
              or ignore a signal that cannot be ignored.

       The [4msignal[24m() function may fail if:

       [1mEINVAL [22mAn attempt was made to set the action to SIG_DFL for a signal that cannot be caught or ignored (or both).

       [4mThe[24m [4mfollowing[24m [4msections[24m [4mare[24m [4minformative.[0m

[1mEXAMPLES[0m
       None.

[1mAPPLICATION USAGE[0m
       The [4msigaction[24m() function provides a more comprehensive and reliable mechanism for controlling signals; new applica‚Äê
       tions should use [4msigaction[24m() rather than [4msignal[24m().

[1mRATIONALE[0m
       None.

[1mFUTURE DIRECTIONS[0m
       None.

[1mSEE ALSO[0m
       [4mSection[24m [4m2.4[24m, [4mSignal[24m [4mConcepts[24m, [4mexec[24m, [4mpause[24m(), [4mraise[24m(), [4msigaction[24m(), [4msigsuspend[24m(), [4mwaitid[24m()

       The Base Definitions volume of POSIX.1‚Äê2008, [1m<signal.h>[0m

[1mCOPYRIGHT[0m
       Portions  of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1, 2013 Edition, Standard
       for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue
       7,  Copyright  (C) 2013 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  (This is
       POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the event of any discrepancy between  this  version
       and  the  original  IEEE  and The Open Group Standard, the original IEEE and The Open Group Standard is the referee
       document. The original Standard can be obtained online at http://www.unix.org/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during  the
       conversion  of  the  source  files  to  man page format. To report such errors, see https://www.kernel.org/doc/man-
       pages/reporting_bugs.html .

IEEE/The Open Group                                        2013                                                 SIGNAL(3P)
